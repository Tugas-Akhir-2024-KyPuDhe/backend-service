generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default(uuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roles    Role[]
  staff    Staff[]
  students Student[]
}

model Role {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default(uuid())
  name      String
  user      User     @relation(fields: [id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  permissions Permission[]
}

model Permission {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique @default(uuid())
  name        String
  description String?
  roleId      Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  role Role? @relation(fields: [roleId], references: [id])
}

model Staff {
  id         Int       @id @default(autoincrement())
  uuid       String    @default(uuid())
  name       String
  birthPlace String?
  address    String?
  phone      String?
  email      String?
  gender     String?
  nip        String?   @unique
  type       String
  position   String?
  startDate  DateTime
  endDate    DateTime?
  mediaId    Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  user    User      @relation(fields: [id], references: [id])
  photo   Media?    @relation(fields: [mediaId], references: [id])
  Class   Class[]
  Student Student[]
}

model Student {
  id          Int       @id @default(autoincrement())
  uuid        String    @default(uuid())
  name        String
  classId     Int?
  waliKelasId Int?
  status      String?   @default("Active") // Active | Alumni | Stay
  birthPlace  String?
  address     String?
  phone       String?
  email       String?
  gender      String?
  majorCode   String?
  nis         String    @unique
  nisn        String    @unique
  startYear   DateTime
  endYear     DateTime?
  mediaId     Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user      User   @relation(fields: [id], references: [id])
  photo     Media? @relation(fields: [mediaId], references: [id])
  class     Class? @relation(fields: [classId], references: [id])
  waliKelas Staff? @relation(fields: [waliKelasId], references: [id])

  ParentOfStudent ParentOfStudent[] @relation("ParentsOfStudent")
  HistoryClass    HistoryClass[]
  Major           Major?            @relation(fields: [majorCode], references: [majorCode])
}

model HistoryClass {
  id          Int      @id @default(autoincrement())
  studentId   Int
  oldClassId  Int
  tahunAjaran String
  statusNaik  String // naik | lulus | tinggal
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  student  Student @relation(fields: [studentId], references: [id])
  oldClass Class   @relation(fields: [oldClassId], references: [id])
}

model Media {
  id        Int      @id @default(autoincrement())
  uuid      String   @default(uuid())
  url       String
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Article         Article[]         @relation("ArticleMedia") //one to many from artikel
  Major           Major[]           @relation("MajorMedia")
  Extracurricular Extracurricular[] @relation("ExtracurricularMedia")
  Facility        Facility[]        @relation("FacilityMedia")
  Galeri          Galeri[]          @relation("GaleriMedia")
  staff           Staff[] //one to one
  students        Student[]
  ConfigSchool    ConfigSchool[]

  ArticleBanner Article[]
  BannerPage    BannerPage[]
  Course        Course[]
}

model ConfigSchool {
  id        Int      @id @default(autoincrement())
  uuid      String   @default(uuid())
  name      String
  about     String
  vision    String?
  mission   String?
  address   String?
  mediaId   Int?
  telp      String?
  email     String
  maps      String?
  npsn      String
  fb        String?
  ig        String?
  tiktok    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  logo Media? @relation(fields: [mediaId], references: [id])
}

model Article {
  id          Int      @id @default(autoincrement())
  uuid        String   @default(uuid())
  bannerId    Int?
  title       String
  description String
  status      String
  type        String
  category    String?
  createdBy   String?
  updateBy    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  banner Media?  @relation(fields: [bannerId], references: [id])
  media  Media[] @relation("ArticleMedia")
}

model Class {
  id           Int      @id @default(autoincrement())
  uuid         String   @default(uuid())
  name         String
  description  String?
  majorCode    String?
  staffId      Int?
  academicYear String?
  capacity     Int?     @default(30)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  major           Major?         @relation(fields: [majorCode], references: [majorCode])
  student         Student[]
  homeRoomTeacher Staff?         @relation(fields: [staffId], references: [id])
  HistoryClass    HistoryClass[]
}

model Major {
  id          Int      @id @default(autoincrement())
  uuid        String   @default(uuid())
  majorCode   String?  @unique
  name        String
  description String?
  prioritas   Int      @default(15)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  media   Media[]   @relation("MajorMedia")
  student Student[]
  class   Class[]
}

model Extracurricular {
  id          Int      @id @default(autoincrement())
  uuid        String   @default(uuid())
  name        String
  description String?
  prioritas   Int      @default(15)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  media Media[] @relation("ExtracurricularMedia")
}

model Facility {
  id          Int      @id @default(autoincrement())
  uuid        String   @default(uuid())
  name        String
  description String?
  prioritas   Int      @default(15)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  media Media[] @relation("FacilityMedia")
}

model BannerPage {
  id          Int      @id @default(autoincrement())
  uuid        String   @default(uuid())
  title       String
  description String?
  title_link  String?
  link        String?
  status      String?
  prioritas   Int      @default(15)
  bannerId    Int?
  createdBy   String?
  updateBy    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  banner      Media?   @relation(fields: [bannerId], references: [id])
}

model ParentOfStudent {
  id            Int      @id @default(autoincrement())
  uuid          String   @default(uuid())
  fatherName    String
  motherName    String
  parentJob     String?
  parentAddress String?
  phone         String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  student Student[] @relation("ParentsOfStudent")
}

model Galeri {
  id          Int      @id @default(autoincrement())
  uuid        String   @default(uuid())
  name        String
  description String?
  prioritas   Int      @default(15)
  status      String   @default("Active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  media Media[] @relation("GaleriMedia")
}

model Course {
  id          Int      @id @default(autoincrement())
  uuid        String   @default(uuid())
  name        String
  code        String
  grade       String
  description String?
  imageId     Int?
  status      String   @default("Active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  image Media? @relation(fields: [imageId], references: [id])
}
